{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apiManagementName": {
            "type": "String"
        },
        "aesUSAPIUrl": {
            "type": "string"
        },
        "aesUKAPIUrl": {
            "type": "string"
        }
    },
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apiManagementName'), '/key-service')]",
            "properties": {
                "displayName": "Key Service",
                "description": "Simple Service to generate AES Keys",
                "subscriptionRequired": true,
                "approvalRequired": false,
                "state": "published"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apiManagementName'), '/key-api')]",
            "properties": {
                "displayName": "Key Service",
                "apiRevision": "1",
                "subscriptionRequired": true,
                "serviceUrl": "[concat(parameters('aesUSAPIUrl'), '/api/keys')]",
                "path": "k",
                "protocols": [
                    "https"
                ],
                "isCurrent": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apiManagementName'), '/key-api/create-keys')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementName'), 'key-api')]"
            ],
            "properties": {
                "displayName": "Create Keys",
                "method": "POST",
                "urlTemplate": "/{NumberOfKeys}",
                "templateParameters": [
                    {
                        "name": "NumberOfKeys",
                        "required": true,
                        "values": [],
                        "type": null
                    }
                ],
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apiManagementName'), '/key-api/get-key')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementName'), 'key-api')]"
            ],
            "properties": {
                "displayName": "Get Key",
                "method": "GET",
                "urlTemplate": "/{key}",
                "templateParameters": [
                    {
                        "name": "key",
                        "required": true,
                        "values": [],
                        "type": null
                    }
                ],
                "description": "Get specific key",
                "responses": []
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apiManagementName'), '/key-api/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementName'), 'key-api')]"
            ],
            "properties": {
                "value": "[concat('<policies>\r\n  <inbound>\r\n    <base />\r\n    <choose>\r\n      <when condition=\"@(&quot;UK West&quot;.Equals(context.Deployment.Region, StringComparison.OrdinalIgnoreCase))\">\r\n        <set-backend-service base-url=\"', parameters('aesUKAPIUrl'), '/api/keys\" />\r\n      </when>\r\n      <otherwise>\r\n        <set-backend-service base-url=\"', parameters('aesUSAPIUrl'), '/api/keys\" />\r\n      </otherwise>\r\n    </choose>\r\n    <cors>\r\n      <allowed-origins>\r\n        <origin>*</origin>\r\n      </allowed-origins>\r\n      <allowed-methods>\r\n        <method>GET</method>\r\n        <method>POST</method>\r\n        <method>PUT</method>\r\n        <method>DELETE</method>\r\n        <method>HEAD</method>\r\n        <method>OPTIONS</method>\r\n        <method>PATCH</method>\r\n        <method>TRACE</method>\r\n      </allowed-methods>\r\n      <allowed-headers>\r\n        <header>*</header>\r\n      </allowed-headers>\r\n      <expose-headers>\r\n        <header>*</header>\r\n      </expose-headers>\r\n    </cors>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>')]",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apiManagementName'), '/key-api/create-keys/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apiManagementName'), 'key-api', 'create-keys')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementName'), 'key-api')]"
            ],
            "properties": {
                "value": "[concat('<policies>\r\n  <inbound>\r\n    <base />\r\n   <choose>\r\n      <when condition=\"@(&quot;UK West&quot;.Equals(context.Deployment.Region, StringComparison.OrdinalIgnoreCase))\">\r\n        <set-backend-service base-url=\"', parameters('aesUKAPIUrl'), '\" />\r\n      </when>\r\n      <otherwise>\r\n        <set-backend-service base-url=\"', parameters('aesUSAPIUrl'), '\" />\r\n      </otherwise>\r\n    </choose>\r\n      <rewrite-uri template=\"/api/keys\" />\r\n    <set-body>@{\r\n            var keys = context.Request.MatchedParameters[\"NumberOfKeys\"];\r\n            var body = $\"{{ \\\"NumberOfKeys\\\" : {keys} }}\";\r\n            return body;\r\n        }</set-body>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>')]",
                "format": "xml"
            }
        }
    ]
}